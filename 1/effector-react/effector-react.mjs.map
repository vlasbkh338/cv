{"version":3,"file":"effector-react.mjs","sources":["effector-react/useStore.ts","effector-react/withDisplayName.ts","effector-react/createComponent.ts","effector-react/createStoreConsumer.ts","effector-react/useList.ts","effector-react/createReactState.ts","effector-react/createGate.ts","effector-react/nossr.ts","effector-react/useIsomorphicLayoutEffect.ts","effector-react/throw.ts","effector-react/createContextComponent.ts","effector-react/connect.ts"],"sourcesContent":["import {Store, is, clearNode, createStore} from 'effector'\nimport React from 'react'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {throwError} from './throw'\n\nexport function useStore<State>(store: Store<State>): State {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n  const currentStore = React.useRef(store)\n  const setState = React.useState(store.getState())[1]\n  useIsomorphicLayoutEffect(() => {\n    if (currentStore.current === store) {\n      setState(store.getState())\n    }\n    currentStore.current = store\n    return store.updates.watch(setState)\n  }, [store])\n  return store.getState()\n}\n\nexport function useStoreMap<State, Result, Keys extends ReadonlyArray<any>>({\n  store,\n  keys,\n  fn,\n}: {\n  store: Store<State>\n  keys: Keys\n  fn(state: State, keys: Keys): Result\n}): Result {\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n  const result: Store<Result> = React.useMemo(\n    () =>\n      createStore(fn(store.getState(), keys)).on(store, (_, state) =>\n        fn(state, keys),\n      ),\n    keys,\n  )\n  const state = useStore(result)\n  useIsomorphicLayoutEffect(\n    () => () => {\n      result.off(store)\n      clearNode(result, {deep: true})\n    },\n    keys,\n  )\n  return state\n}\n","export function withDisplayName(name: string, Component: any) {\n  Component.displayName = name\n  return Component\n}\n","import React from 'react'\nimport {Store, is, combine, createEvent} from 'effector'\nimport {useStore} from './useStore'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {StoreView} from './index.h'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function createComponent<Props, State>(\n  shape: Store<State> | {[key: string]: Store<any> | any},\n  renderProp: (props: Props, state: State) => React.ReactNode,\n): StoreView<State, Props> {\n  let store: Store<any>\n  if (is.store(shape)) {\n    store = shape\n  } else {\n    if (typeof shape === 'object' && shape !== null) {\n      store = combine(shape)\n    } else throwError('shape should be a store or object with stores')\n  }\n  let storeName = 'Unknown'\n  //@ts-ignore\n  if (store && store.shortName) {\n    storeName = store.shortName\n  }\n  const mounted = createEvent<any>()\n  const unmounted = createEvent<any>()\n\n  function RenderComponent(props: Props) {\n    const propsRef = React.useRef(props)\n    const state = useStore(store)\n    useIsomorphicLayoutEffect(() => {\n      mounted({props: propsRef.current, state: store.getState()})\n      return () => {\n        unmounted({props: propsRef.current, state: store.getState()})\n      }\n    }, [])\n    const result = renderProp(props, state)\n    propsRef.current = props\n    return result\n  }\n  RenderComponent.mounted = mounted\n  RenderComponent.unmounted = unmounted\n  return withDisplayName(`${storeName}.View`, RenderComponent)\n}\n","import {Store} from 'effector'\n\nimport {StoreConsumer} from './index.h'\nimport {createComponent} from './createComponent'\n\nexport function createStoreConsumer<State>(\n  store: Store<State>,\n): StoreConsumer<State> {\n  return createComponent(store, ({children}, state) => children(state))\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from 'react'\nimport {Store, is} from 'effector'\nimport {useStoreMap} from './useStore'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function useList<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n      }\n    | ((item: T, index: number) => React.ReactNode),\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    fn = renderItem.fn\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      ({index, keys}: {index: number; keys: any[]}) => {\n        const item = useStoreMap({\n          store: list,\n          keys: [index, ...keys],\n          fn: (list, keys) => list[keys[0]],\n        })\n        return fnRef.current(item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list])\n  const length = useStoreMap({\n    store: list,\n    keys: [list],\n    fn: list => list.length,\n  })\n  const fnRef = React.useRef(fn)\n  fnRef.current = fn\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  return Array.from({length}, (_, i) =>\n    React.createElement(Item, {\n      index: i,\n      key: i,\n      keys: keysSelfMemo,\n    }),\n  )\n}\n","import React from 'react'\nimport {Store} from 'effector'\n\nimport {useStore} from './useStore'\nimport {withDisplayName} from './withDisplayName'\n\nexport function createReactState<State>(\n  store: Store<State>,\n  Component: React.ComponentType<any>,\n) {\n  const wrappedComponentName =\n    Component.displayName || Component.name || 'Unknown'\n  return withDisplayName(`Connect(${wrappedComponentName})`, (props: any) =>\n    React.createElement(Component, Object.assign({}, props, useStore(store))),\n  )\n}\n","import React from 'react'\nimport {createStore, createApi, launch, Store} from 'effector'\nimport {Gate} from './index.h'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {withDisplayName} from './withDisplayName'\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const propsRef = React.useRef<any>(null)\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.open(propsRef.current)\n    return () => GateComponent.close(propsRef.current) as any\n  }, [GateComponent])\n  if (!shallowCompare(propsRef.current, props)) {\n    propsRef.current = props\n    GateComponent.set(props)\n  }\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\n\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = {} as any,\n): Gate<Props> {\n  let domain\n  if (typeof name === 'object' && name !== null) {\n    if ('defaultState' in name) {\n      //@ts-ignore\n      defaultState = name.defaultState\n    }\n    //@ts-ignore\n    if (name.domain) domain = name.domain\n    //@ts-ignore\n    name = name.name || 'gate'\n  }\n  //@ts-ignore\n  const status = createStore(Boolean(false), {named: 'status'})\n  //@ts-ignore\n  const state: Store<Props> = createStore(defaultState, {named: 'state'})\n  const {set} = createApi(state, {\n    set: (_, state) => state,\n  })\n\n  const {open, close} = createApi(status, {\n    open: () => Boolean(true),\n    close: () => Boolean(false),\n  })\n  function GateComponent(props: Props) {\n    useGate(GateComponent as any, props)\n    return null\n  }\n  GateComponent.open = open\n  GateComponent.close = close\n  GateComponent.status = status\n  GateComponent.state = state\n  GateComponent.set = set\n  state.reset(close)\n\n  if (domain) {\n    const {hooks} = domain\n    launch({\n      target: [\n        hooks.store,\n        hooks.store,\n        hooks.event,\n        hooks.event,\n        hooks.event,\n      ] as any,\n      params: [status, state, open, close, set],\n    })\n  }\n  return withDisplayName(`Gate:${name}`, GateComponent)\n}\n","import {Event} from 'effector'\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent<T>(event: Event<T>): (payload: T) => T {\n  return event\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n","import React from 'react'\nimport {Store} from 'effector'\nimport {useStore} from './useStore'\nimport {withDisplayName} from './withDisplayName'\n\nexport const createContextComponent = <Props, State, Context>(\n  store: Store<State>,\n  context: React.Context<Context>,\n  renderProp: (props: Props, state: State, context: Context) => React.ReactNode,\n): React.ComponentType<Props> =>\n  withDisplayName(\n    `${store.shortName || 'Unknown'}.ContextComponent`,\n    (props: any) => {\n      const ctx = React.useContext(context)\n      const state = useStore(store)\n      return renderProp(props, state, ctx)\n    },\n  )\n","import React from 'react'\n\nimport {Store, is} from 'effector'\nimport {createReactState} from './createReactState'\n\nexport const connect = <State>(Component: React.ComponentType<any>) => (\n  store: Store<State>,\n) => {\n  let View: any = Component\n  if (typeof Component !== 'function') {\n    View = store\n    store = Component as any\n  }\n  return createReactState(store, View)\n}\n"],"names":["useStore","store","is","throwError","currentStore","React","useRef","setState","useState","getState","useIsomorphicLayoutEffect","current","updates","watch","useStoreMap","keys","fn","Array","isArray","result","useMemo","createStore","on","_","state","off","clearNode","deep","withDisplayName","name","Component","displayName","createComponent","shape","renderProp","RenderComponent","props","propsRef","mounted","unmounted","combine","storeName","shortName","createEvent","createStoreConsumer","children","useList","list","renderItem","Item","index","item","fnRef","memo","length","keysSelfMemo","from","i","createElement","key","createReactState","Object","assign","useGate","GateComponent","open","close","a","b","aKeys","bKeys","shallowCompare","set","createGate","defaultState","domain","status","Boolean","named","createApi","reset","hooks","launch","target","event","params","useEvent","window","useLayoutEffect","useEffect","message","Error","createContextComponent","context","ctx","useContext","connect","View"],"mappings":"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"}